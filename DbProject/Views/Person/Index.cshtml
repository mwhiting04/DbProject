@model PagedList.IPagedList<DbProject.Models.CustomPerson>
@using PagedList.Mvc;

@Html.Partial("_DeleteForm", 0)
<input type="hidden" id="currentSortOrder" value="@ViewBag.CurrentSort" />


<h2>Person List</h2>

<button class="btn btn-success" id="createButton">Create New Person</button>
<button type="button" class="btn btn-danger" id="deleteButton">Delete</button>

<hr />

<div id="personListContainer">
    @Html.Partial("_PersonListPartial", Model)
</div>

<!-- Create Modal -->
<div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <!-- Content loaded here by AJAX -->
        </div>
    </div>
</div>

<!-- Details Modal -->
<div class="modal fade" id="detailsModal" tabindex="-1" role="dialog" aria-labelledby="detailsModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <!-- Content loaded here by AJAX -->
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/js/bootstrap.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var selectedRowId = null; // Variable to store the ID of the selected row

            // Bind row selection function
            function bindRowSelection() {
                $('.selectable-row').off('click').on('click', function () {
                    $('.selectable-row').removeClass('selected-row');
                    $(this).addClass('selected-row');
                    selectedRowId = $(this).data('id'); // Store the selected row ID
                });

                // Reapply the highlight if there's a selected row ID
                if (selectedRowId !== null) {
                    $('.selectable-row').each(function () {
                        if ($(this).data('id') === selectedRowId) {
                            $(this).addClass('selected-row');
                        }
                    });
                }
            }

            bindRowSelection();

            function loadPersonList(sortOrder, page) {
                $.ajax({
                    url: '@Url.Action("Index")',
                    data: { sortOrder: sortOrder, page: page },
                    success: function (data) {
                        console.log("Data loaded for sortOrder: " + sortOrder + " and page: " + page);
                        $('#personListContainer').html(data);
                        bindRowSelection(); // Reapply event binding after content reload
                    },
                    error: function () {
                        alert('An error occurred while loading the list.');
                    }
                });
            }


            //Sort functionality
            $(document).on('click', '.sort-link', function (e) {
                e.preventDefault();

                var sortOrder = $(this).data('sort');
                var currentSortOrder = $('#currentSortOrder').val();
                var newSortOrder = (currentSortOrder === sortOrder) ? (sortOrder + '_desc') : sortOrder;

                console.log(`Current sortOrder: ${currentSortOrder}`);
                console.log(`Clicked sortOrder: ${sortOrder}`);
                console.log(`New sortOrder: ${newSortOrder}`);

                $('#currentSortOrder').val(newSortOrder);

                // Use the current page number from the PagedList
                loadPersonList(newSortOrder, '@ViewBag.CurrentPage');
            });




            // Pagination functionality
            $(document).on('click', '.page-link', function (e) {
                e.preventDefault();
                var page = $(this).data('page');
                var currentSortOrder = $('#currentSortOrder').val();
                loadPersonList(currentSortOrder, page);
            });


            $(document).on('click', '.pagination-link', function (e) {
                e.preventDefault();

                // Get the page number from the clicked link
                var page = $(this).data('page');

                // Update the hidden field for current page
                $('#currentPage').val(page);

                // Reload the person list with the current sort order and new page
                loadPersonList($('#currentSortOrder').val(), page);
            });


            //Details Form
            $('#detailsModal').on('show.bs.modal', function (e) {
                var button = $(e.relatedTarget);
                var personId = button.data('id'); // Get ID from data-id attribute

                var modal = $(this);
                $.ajax({
                    url: '@Url.Action("Details")',
                    data: { id: personId },
                    success: function (data) {
                        /*console.log('Received data:', data); // Debugging*/
                        modal.find('.modal-content').html(data); // Load content into modal body
                    },
                    error: function () {
                        alert('An error occurred while loading the details.');
                    }
                });
            });


            //Create Form
            $('#createButton').on('click', function () {
                $.ajax({
                    url: '@Url.Action("Create")',
                    success: function (data) {
                        $('#createModal .modal-content').html(data);
                        $('#createModal').modal('show');
                    }
                });
            });


            // Submit Edits
            $(document).on('submit', '#editForm', function (e) {
                e.preventDefault();
                var form = $(this);

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Edit")',
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            // Hide the modal on successful edit
                            $('#detailsModal').modal('hide');
                            // Refresh the list to reflect updated data without a full page reload
                            loadPersonList($('#currentSortOrder').val(), '@ViewBag.CurrentPage');
                        } else {
                            // Replace the current modal content with the new content returned from the server
                            $('#detailsModal .modal-body').html(response);
                            // Optionally, scroll to the top of the modal to display the errors clearly
                            $('#detailsModal').scrollTop(0);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Error:', error);
                        alert('An error occurred while saving changes.');
                    }
                });
            });


            //Submit Create
            $(document).on('submit', '#createForm', function (e) {
                e.preventDefault();
                var form = $(this);

                $.ajax({
                    type: form.attr('method'),
                    url: form.attr('action'),
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            $('#createModal').modal('hide');
                            location.reload(); // Reloads the page to show updated data
                        } else {
                            // If validation fails or no changes are made, render the partial view in the modal
                            $('#createModal .modal-content').html(response);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Error:', error);
                        alert('An error occurred while creating the record.');
                    }
                });
            });




            //Delete Record
            $(document).on('click', '#deleteButton', function () {
                var selectedRow = $('.selected-row');
                if (selectedRow.length == 0) {
                    alert('Please select a record to delete.');
                    return;
                }

                var id = selectedRow.data('id');
                console.log('Selected ID for deletion:', id); // Debugging

                if (confirm('Are you sure you want to delete this record?')) {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("Delete")',
                        data: { id: id },
                        success: function (response) {
                            console.log("Server Response:", response);
                            if (response.success) {
                                alert('Record deleted successfully.');
                                location.reload(); // Reloads the page to show updated data
                            } else {
                                alert(response.message || 'An error occurred while deleting the record.');
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error:', error);
                            alert('An error occurred while deleting the record.');
                        }
                    });
                }
            });
        });

        var testValue = '@ViewBag.CurrentSort';
        console.log('Test Value:', testValue); // Should show the actual value

    </script>
}

